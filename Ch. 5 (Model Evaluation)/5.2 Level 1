#Researchers collected measurements from loblolly pines.
#Calculate the mean squared error metric for the model using the true values and the predicted values.
#Calculate the root mean squared error metric for the model using parameters.

# Import packages and functions
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error

# Load the dataset
pines = pd.read_csv('pines_sample.csv')

# Store relevant columns as variables
X = pines['age']
y = pines['height']

# Initialize the model -- polynomial regression model
polyFeatures = PolynomialFeatures(degree=3, include_bias=False)
xPoly = polyFeatures.fit_transform(X.values.reshape(-1, 1))
polyModel = LinearRegression()

# Fit the model
polyModel = polyModel.fit(xPoly, y)

# Make predictions
yPrediction = polyModel.predict(xPoly)

# Evaluate accuracy
# Your code goes here 
MSE = mean_squared_error(y,yPrediction)
RMSE = mean_squared_error(y,yPrediction, squared = False)

# Print metrics
print('Mean squared error =', MSE)
print('Root mean squared error =', RMSE)

#Output
#Mean squared error = 1.9089037617620437
#Root mean squared error = 1.381630834109475

#Interpretation
#MSE=1.9089.
#This means that, on average, the squared difference between the actual height of the pine trees and the predicted height is approximately 1.91 unitsÂ².

#RMSE=1.3816.
#This means that the average error (difference) between the actual and predicted height of the pine trees is approximately 1.38 units.
