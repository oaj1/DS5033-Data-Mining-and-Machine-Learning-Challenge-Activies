#Heart disease is one of the leading causes of death in the United States. Developing early diagnostic tools for heart disease may save thousands of lives every year.
#The heart datase contains data from a sample of medical records in the United States, Hungary, and Switzerland. 
#For each patient, target=0 if the patient does not have heart disease and target=1 if the patient does have heart disease.
#Initialize a k-nearest neighbors classifier, heartknn, with k = 4.
#Fit heartknn to input features X and output y. Use np.ravel() to flatten the output feature into an array.

# Import packages and functions
import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler

# Load the heart dataset
heart = pd.read_csv('heart.csv')

# Create a dataframe X containing trestbps and age
X = heart[['trestbps', 'age']]

# Scale the input features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Output feature: target
y = heart[['target']]

# Initialize the model
heartknn = KNeighborsClassifier(n_neighbors=4)

# Fit the model to X and y
heartknn = heartknn.fit(X,np.ravel(y))

# Print model predictions
print(heartknn.predict(X))

# Print proportion of instances classified correctly
print(heartknn.score(X, y))
