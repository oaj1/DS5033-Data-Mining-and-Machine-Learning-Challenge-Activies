#Researchers studying chemical properties of wines collected data on a sample of white wines in Northern Portugal. A research goal was to cluster wines based on similar chemical properties.
#Use the DBSCAN clustering function to cluster wines. Set eps=0.62 and min_samples=4.
#Fit the DBSCAN model to cluster wines.

import pandas as pd
from sklearn.cluster import DBSCAN
from sklearn.preprocessing import StandardScaler

wine = pd.read_csv('wine1.csv')

# Create an input matrix with selected features
X = wine[['free_sulfur_dioxide', 'residual_sugar']]

scaler = StandardScaler()
X = pd.DataFrame(scaler.fit_transform(X))

# Your code goes here
dbscanModel = DBSCAN(eps=0.62, min_samples=4)
dbscanModel.fit(X)

print(dbscanModel.labels_)

#output
#[-1  1  0 -1 -1 -1 -1  0  1  0 -1 -1  1  1 -1  0  0  0  0  0 -1  0]

#Interpretation
#Clusters Identified: DBSCAN has grouped some points into two clusters:
#Cluster 0: Represented by the label 0.
#Cluster 1: Represented by the label 1.
#Noise Points: Points labeled -1 are considered "noise" because they did not meet the density criteria to belong to either cluster 0 or cluster 1.
